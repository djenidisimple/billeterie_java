package com.formulaire;
import com.gestion.GestionRoute;
import com.gestion.GestionTrain;
import com.formulaire.form.Form;
import com.classes.Route;
import javax.swing.*;
import java.util.*;
import java.sql.Timestamp;
import java.text.ParseException;
import java.time.Duration;
import java.time.Instant;
import javax.swing.JSpinner.DateEditor;
import java.sql.ResultSet;
import com.gestion.GestionPlace;

/**
 *
 * @author Djenidi
 */
public class RegisterRoute extends javax.swing.JFrame {

    /**
     * Creates new form RegisterRoute
     */
    public RegisterRoute() {
        initComponents();
        Form form = new Form();
        DateEditor formatDateD = new DateEditor(dateOfDeparture, "yyyy-MM-dd HH:mm");
        DateEditor formatDateA = new DateEditor(dateOfArrival, "yyyy-MM-dd HH:mm");
        dateOfDeparture.setEditor(formatDateD);
        dateOfArrival.setEditor(formatDateA);
         
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE); 
        if(com.gestion.ValuePassed.idTrajet > 0)
            loadEdit();
        
        departure.setInputVerifier(new InputVerifier() {
            @Override
            public boolean verify(JComponent input) {
                JTextField tf = (JTextField) input;
                String text = tf.getText();
                if (text.length() <= 1 || !Form.Name(text))
                {
                    JOptionPane.showMessageDialog(input, "Le champs doit être rempli correctement sans chiffre ou des caractères spéciaux et doit contenir au moins deux lettres!");
                    return false;
                }
                return true; // valide, on laisse 
            }
        });
        
        arrival.setInputVerifier(new InputVerifier() {
            @Override
            public boolean verify(JComponent input) {
                JTextField tf = (JTextField) input;
                String text = tf.getText();
                if (text.length() <= 1 || !Form.Name(text))
                {
                    JOptionPane.showMessageDialog(input, "Le champs doit être rempli correctement sans chiffre ou des caractères spéciaux et doit contenir au moins deux lettres!");
                    return false;
                }
                return true; // valide, on laisse 
            }
        });
        
        dateOfDeparture.setInputVerifier(new InputVerifier() {
            @Override
            public boolean verify(JComponent input) {
                JSpinner date = (JSpinner) input;
                try {
                    date.commitEdit(); // applique la valeur dans le modèle
                    Date dateDeparture = (Date) dateOfDeparture.getValue();
                    Date now = new Date();
                    JOptionPane.showMessageDialog(input, "Date : " + dateDeparture.before(now));                       
                    if (dateDeparture.before(now)) {
                        JOptionPane.showMessageDialog(input, "Date invalide !");                       
                        return false;
                    }
                    return true;
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(input, "Date invalide !");
                    return false;
                }
            }
        });
        
        dateOfArrival.setInputVerifier(new InputVerifier() {
            @Override
            public boolean verify(JComponent input) {
                try {
                    dateOfArrival.commitEdit(); // applique la valeur dans le modèle
                    return true;
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(input, "Date invalide !");
                    return false;
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        departure = new javax.swing.JTextField();
        arrival = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dateOfDeparture = new com.toedter.calendar.JSpinnerDateEditor();
        dateOfArrival = new com.toedter.calendar.JSpinnerDateEditor();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(8, 103, 136));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(8, 103, 136), 1, true));
        jPanel1.setPreferredSize(new java.awt.Dimension(379, 462));

        title.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Ajout de Trajet");

        departure.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        departure.setMinimumSize(new java.awt.Dimension(85, 22));
        departure.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                departureKeyReleased(evt);
            }
        });

        arrival.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        arrival.setMinimumSize(new java.awt.Dimension(85, 22));
        arrival.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                arrivalKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Gare de départ");

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gare de d'arriver");

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Heure et Date de départ");

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Heure et Date d'arriver");

        jButton1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        jButton1.setText("Enregistrer");
        jButton1.setPreferredSize(new java.awt.Dimension(189, 39));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        dateOfDeparture.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        dateOfDeparture.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateOfDepartureKeyReleased(evt);
            }
        });

        dateOfArrival.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        dateOfArrival.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateOfArrivalKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(title))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(arrival, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(departure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateOfDeparture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateOfArrival, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(title)
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(departure, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(arrival, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(dateOfDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(12, 12, 12)
                .addComponent(dateOfArrival, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        Date dateDeparture = (Date) dateOfDeparture.getValue();
        Date dateArrival = (Date) dateOfArrival.getValue();
        Timestamp dateD = new Timestamp(dateDeparture.getTime());
        Timestamp dateA = new Timestamp(dateArrival.getTime());
        
        // Convertir Timestamp en Instant
        Instant start = dateD.toInstant();
        Instant end = dateA.toInstant();

        // Calculer la durée
        Duration duration = Duration.between(start, end);
        
        long days = duration.toDays();
        long hours = duration.toHoursPart();   // Partie heures (0-23)
        long minutes = duration.toMinutesPart(); // Partie minutes (0-59)
        
        GestionTrain train = new GestionTrain();
        
        if(Form.Route(departure.getText(), arrival.getText(), dateD, dateA) == 0 && (days > 0 || hours > 0 || minutes > 0))
        {
            Route route = new Route(com.gestion.ValuePassed.idTrajet, departure.getText(), arrival.getText(), 0, 0, dateA, dateD);
            GestionRoute routeG = new GestionRoute();
            if(com.gestion.ValuePassed.idTrajet > 0)
            {               
                routeG.update(route);
                JOptionPane.showMessageDialog(null, "Modification reussite!");
            }
            else 
            {
                routeG.insert(route);
                JOptionPane.showMessageDialog(null, "Enregistrement reussite!");
                GestionPlace gestPlace = new GestionPlace();
                gestPlace.insert();
            }
        }
        else if (days <= 0 || hours <= 0 || minutes <= 0)
        {
            JOptionPane.showMessageDialog(this, "La date de départ doit être inférieur à la date d'arriver!");
        }
        else 
        {
            JOptionPane.showMessageDialog(this, "Veuilliez remplir tous les champs correctements!");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void departureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_departureKeyReleased
        boolean d = Form.Name(departure.getText());
        if (!d)
        {
            JOptionPane.showMessageDialog(this, "Le champs doit être rempli correctement sans chiffre ou des caractères spéciaux et doit contenir au moins deux lettres!");            
        }
    }//GEN-LAST:event_departureKeyReleased

    private void arrivalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arrivalKeyReleased
        boolean d = Form.Name(arrival.getText());
        if (!d)
        {
            JOptionPane.showMessageDialog(this, "Le champs doit être rempli correctement sans chiffre ou des caractères spéciaux et doit contenir au moins deux lettres!");            
        }
    }//GEN-LAST:event_arrivalKeyReleased

    private void dateOfDepartureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateOfDepartureKeyReleased
        /*String dateDeparture = dateOfDeparture.getText();
        boolean d = Form.Name(dateOfDeparture);
        if (!d)
        {
            JOptionPane.showMessageDialog(this, "Le champs doit être rempli correctement sans chiffre ou des caractères spéciaux et doit contenir au moins deux lettres!");            
        }*/
    }//GEN-LAST:event_dateOfDepartureKeyReleased

    private void dateOfArrivalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateOfArrivalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_dateOfArrivalKeyReleased
    
    private void loadEdit()
    {
        title.setText("Modification de Trajet");
        GestionRoute route = new GestionRoute();
        try
        {
            ResultSet rs = route.viewByIdl(com.gestion.ValuePassed.idTrajet);
            while(rs.next())
            {
                departure.setText(rs.getString("placeOfDeparture"));
                arrival.setText(rs.getString("placeOfArrival"));
                dateOfDeparture.setValue(rs.getTimestamp("dateLeave"));
                dateOfArrival.setValue(rs.getTimestamp("dateArrived"));
            }
        }
        catch(Exception e)
        {
            System.out.println("Erreur : " + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterRoute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterRoute().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arrival;
    private com.toedter.calendar.JSpinnerDateEditor dateOfArrival;
    private com.toedter.calendar.JSpinnerDateEditor dateOfDeparture;
    private javax.swing.JTextField departure;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
